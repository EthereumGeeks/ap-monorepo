{
  "address": "0xC1E3951E83A603178667529699A1dcE8494145fa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dataRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "dataRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_refData",
          "type": "bytes"
        }
      ],
      "name": "getDataPoint",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_ref",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getDataPointAtTime",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_a",
          "type": "address"
        }
      ],
      "name": "setDataRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xce375091bc81f4283e14ce78a02099d180ef1c0665549b51d33087903dfb4340",
  "receipt": {
    "to": null,
    "from": "0x6C51ECF949882c2183357B860FD82Dd4bb631840",
    "contractAddress": "0xC1E3951E83A603178667529699A1dcE8494145fa",
    "transactionIndex": 0,
    "gasUsed": "266135",
    "logsBloom": "0x
    "blockHash": "0xb32712dfe271f92635e1184c3879dd2979ac019c908d7125fa77657c9cff5f47",
    "transactionHash": "0xce375091bc81f4283e14ce78a02099d180ef1c0665549b51d33087903dfb4340",
    "logs": [],
    "blockNumber": 153,
    "cumulativeGasUsed": "266135",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE46b326ec2089f2D011e22Ab31117f87cAbF93Fa"
  ],
  "solcInputHash": "881b45994c61c48eb152b2243f6d8f05",
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dataRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"dataRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_refData\",\"type\":\"bytes\"}],\"name\":\"getDataPoint\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_ref\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getDataPointAtTime\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"setDataRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OracleProxy/DataRegistryProxy.sol\":\"DataRegistryProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Core/Base/DataRegistry/DataRegistryStorage.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: Apache-2.0\\\"\\npragma solidity ^0.7.0;\\npragma experimental ABIEncoderV2;\\n\\n\\n/**\\n * @title DataRegistryStorage\\n * @notice Describes the storage of the DataRegistry\\n */\\ncontract DataRegistryStorage {\\n\\n    struct DataPoint {\\n        int256 dataPoint;\\n        bool isSet;\\n    }\\n\\n    struct Set {\\n        // timestamp => DataPoint\\n        mapping(uint256 => DataPoint) dataPoints;\\n        uint256 lastUpdatedTimestamp;\\n        address provider;\\n        bool isSet;\\n    }\\n\\n    mapping(bytes32 => Set) internal sets;\\n}\",\"keccak256\":\"0x5535bb4ce528fa63d80a2162a5a3c35ace4f232d867e5d4ad355fff0a7166d74\",\"license\":\"Apache-2.0\"},\"contracts/Core/Base/DataRegistry/IDataRegistry.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: Apache-2.0\\\"\\npragma solidity ^0.7.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./DataRegistryStorage.sol\\\";\\n\\n\\ninterface IDataRegistry {\\n\\n    function isRegistered(bytes32 setId)\\n        external\\n        view\\n        returns (bool);\\n\\n    function getLastUpdatedTimestamp(bytes32 setId)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getDataProvider(bytes32 setId)\\n        external\\n        view\\n        returns (address);\\n\\n    function setDataProvider(\\n        bytes32 setId,\\n        address provider\\n    )\\n        external;\\n\\n    function publishDataPoint(\\n        bytes32 setId,\\n        uint256 timestamp,\\n        int256 dataPoint\\n    )\\n        external;\\n\\n    function getDataPoint(\\n        bytes32 setId,\\n        uint256 timestamp\\n    )\\n        external\\n        view\\n        returns (int256, bool);\\n}\\n\",\"keccak256\":\"0x0c4f892abfc38288383619f74c2d607f302b6bd76d05a74c2fad2f7e8b39c3fe\",\"license\":\"Apache-2.0\"},\"contracts/OracleProxy/DataRegistryProxy.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: Apache-2.0\\\"\\npragma solidity ^0.7.0;\\n\\n\\nimport \\\"../Core/Base/DataRegistry/IDataRegistry.sol\\\";\\nimport \\\"./OracleProxyInterface.sol\\\";\\n\\ncontract DataRegistryProxy is OracleProxyInterface {\\n\\n    address public dataRegistry;\\n\\n    constructor(address _dataRegistry) public {\\n        dataRegistry = _dataRegistry;\\n    }\\n\\n    function setDataRegistryAddress(address _a) public {\\n        dataRegistry = _a;\\n    }\\n\\n    function getDataPoint(bytes memory _refData) override public view returns (int256, bool) {\\n        (bytes32 id, uint256 timestamp) = abi.decode(_refData,(bytes32,uint256));\\n        return IDataRegistry(dataRegistry).getDataPoint(id, timestamp);\\n    }\\n\\n    \\n    function getDataPointAtTime(bytes memory _ref, uint256 timestamp) override public view returns (int256) {\\n        revert(\\\"Not supported\\\");\\n    }\\n}\",\"keccak256\":\"0x2d87fa8726f852add8a0545cb505d5a2070c63c28be8c2982ec679e11a585b23\",\"license\":\"Apache-2.0\"},\"contracts/OracleProxy/OracleProxyInterface.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: Apache-2.0\\\"\\npragma solidity ^0.7.0;\\n\\ninterface OracleProxyInterface {\\n\\n    function getDataPoint(bytes memory) external view returns (int256, bool);\\n\\n    function getDataPointAtTime(bytes memory, uint256 timestamp) external view returns (int256);\\n\\n}\",\"keccak256\":\"0x73706f9c6671c5105a87276f3b1ec1ae8178b2edf39fc1ecaad6c2cfc124dbbe\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103d83803806103d88339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610373806100656000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630378c1b41461005157806318457925146100795780634ca1556314610138578063a39c1d6b146101f2575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b0316610216565b005b61011f6004803603602081101561008f57600080fd5b8101906020810181356401000000008111156100aa57600080fd5b8201836020820111156100bc57600080fd5b803590602001918460018302840111640100000000831117156100de57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610238945050505050565b6040805192835290151560208301528051918290030190f35b6101e06004803603604081101561014e57600080fd5b81019060208101813564010000000081111561016957600080fd5b82018360208201111561017b57600080fd5b8035906020019184600183028401116401000000008311171561019d57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506102ef915050565b60408051918252519081900360200190f35b6101fa61032e565b604080516001600160a01b039092168252519081900360200190f35b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060008084806020019051604081101561025357600080fd5b50805160209091015160005460408051628a4ec160e41b8152600481018590526024810184905281519496509294506001600160a01b03909116926308a4ec10926044808201939291829003018186803b1580156102b057600080fd5b505afa1580156102c4573d6000803e3d6000fd5b505050506040513d60408110156102da57600080fd5b50805160209091015190945092505050915091565b6040805162461bcd60e51b815260206004820152600d60248201526c139bdd081cdd5c1c1bdc9d1959609a1b6044820152905160009181900360640190fd5b6000546001600160a01b03168156fea2646970667358221220acb82df1b809964a8cdb55c0a86195e15f9e8dc76fd90ca25936028518f154de64736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630378c1b41461005157806318457925146100795780634ca1556314610138578063a39c1d6b146101f2575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b0316610216565b005b61011f6004803603602081101561008f57600080fd5b8101906020810181356401000000008111156100aa57600080fd5b8201836020820111156100bc57600080fd5b803590602001918460018302840111640100000000831117156100de57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610238945050505050565b6040805192835290151560208301528051918290030190f35b6101e06004803603604081101561014e57600080fd5b81019060208101813564010000000081111561016957600080fd5b82018360208201111561017b57600080fd5b8035906020019184600183028401116401000000008311171561019d57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506102ef915050565b60408051918252519081900360200190f35b6101fa61032e565b604080516001600160a01b039092168252519081900360200190f35b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060008084806020019051604081101561025357600080fd5b50805160209091015160005460408051628a4ec160e41b8152600481018590526024810184905281519496509294506001600160a01b03909116926308a4ec10926044808201939291829003018186803b1580156102b057600080fd5b505afa1580156102c4573d6000803e3d6000fd5b505050506040513d60408110156102da57600080fd5b50805160209091015190945092505050915091565b6040805162461bcd60e51b815260206004820152600d60248201526c139bdd081cdd5c1c1bdc9d1959609a1b6044820152905160009181900360640190fd5b6000546001600160a01b03168156fea2646970667358221220acb82df1b809964a8cdb55c0a86195e15f9e8dc76fd90ca25936028518f154de64736f6c63430007040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 45602,
        "contract": "contracts/OracleProxy/DataRegistryProxy.sol:DataRegistryProxy",
        "label": "dataRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}