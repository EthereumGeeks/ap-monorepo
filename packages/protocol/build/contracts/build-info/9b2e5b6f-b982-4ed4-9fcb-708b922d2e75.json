{
  "id": "9b2e5b6f-b982-4ed4-9fcb-708b922d2e75",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.4",
  "solcLongVersion": "0.7.4+commit.3f05b770",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Extensions/FDT/CMTA20FDT/RuleEngineMock.sol": {
        "content": "// \"SPDX-License-Identifier: MPL\"\n\n/* \n * Copyright (c) Capital Market and Technology Association, 2018-2019\n * https://cmta.ch\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. \n */\n\npragma solidity ^0.7.0;\n\nimport \"./RuleMock.sol\";\n\n\n/**\n * @title IRule\n * @dev IRule interface.\n */\ninterface IRule {\n  function isTransferValid(address _from, address _to, uint256 _amount) external view returns (bool isValid);\n  function detectTransferRestriction(address _from, address _to, uint256 _amount) external view returns (uint8);\n  function canReturnTransferRestrictionCode(uint8 _restrictionCode) external view returns (bool);\n  function messageForTransferRestriction(uint8 _restrictionCode) external view returns (string memory);\n}\n\n\ncontract RuleEngineMock {\n\n    IRule[] internal _rules;\n\n    constructor() {\n        _rules.push(IRule(address(new RuleMock())));\n    }\n\n    function setRules(IRule[] calldata __rules) external {\n        _rules = __rules;\n    }\n\n    function ruleLength() external view returns (uint256) {\n        return _rules.length;\n    }\n\n    function rule(uint256 ruleId) external view returns (IRule) {\n        return _rules[ruleId];\n    }\n\n    function rules() external view returns(IRule[] memory) {\n        return _rules;\n    }\n\n    function detectTransferRestriction(address _from, address _to, uint256 _amount) public view returns (uint8) {\n        for (uint256 i = 0; i < _rules.length; i++) {\n            uint8 restriction = _rules[i].detectTransferRestriction(_from, _to, _amount);\n            if (restriction > 0) {\n                return restriction;\n            }\n        }\n        return 0;\n    }\n\n    function validateTransfer(address _from, address _to, uint256 _amount) public view returns (bool) {\n        return detectTransferRestriction(_from, _to, _amount) == 0;\n    }\n\n    function messageForTransferRestriction(uint8 _restrictionCode) public view returns (string memory) {\n        for (uint256 i = 0; i < _rules.length; i++) {\n            if (_rules[i].canReturnTransferRestrictionCode(_restrictionCode)) {\n                return _rules[i].messageForTransferRestriction(_restrictionCode);\n            }\n        }\n        return \"Unknown restriction code\";\n    }\n}"
      },
      "contracts/Extensions/FDT/CMTA20FDT/RuleMock.sol": {
        "content": "// \"SPDX-License-Identifier: MPL\"\n\n/* \n * Copyright (c) Capital Market and Technology Association, 2018-2019\n * https://cmta.ch\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. \n */\n\npragma solidity ^0.7.0;\n\n\ncontract RuleMock {\n\n  uint8 private constant AMOUNT_TOO_HIGH = 10;\n  string private constant TEXT_AMOUNT_TOO_HIGH = \"Amount too high\";\n  string private constant TEXT_CODE_NOT_FOUND = \"Code not found\";\n\n  function isTransferValid(address _from, address _to, uint256 _amount) public pure returns (bool isValid) {\n    return detectTransferRestriction(_from, _to, _amount) == 0;\n  }\n\n  function detectTransferRestriction(address /* _from */, address /* _to */, uint256 _amount) public pure returns (uint8) {\n    return _amount < 20 ? 0 : AMOUNT_TOO_HIGH;\n  }\n\n  function canReturnTransferRestrictionCode(uint8 _restrictionCode) public pure returns (bool) {\n    return _restrictionCode == AMOUNT_TOO_HIGH;\n  }\n\n  function messageForTransferRestriction(uint8 _restrictionCode) external pure returns (string memory) {\n    return _restrictionCode == AMOUNT_TOO_HIGH ? TEXT_AMOUNT_TOO_HIGH : TEXT_CODE_NOT_FOUND;\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Extensions/FDT/CMTA20FDT/RuleEngineMock.sol": {
        "IRule": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "_restrictionCode",
                  "type": "uint8"
                }
              ],
              "name": "canReturnTransferRestrictionCode",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "detectTransferRestriction",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "isTransferValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isValid",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "_restrictionCode",
                  "type": "uint8"
                }
              ],
              "name": "messageForTransferRestriction",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "IRule interface.",
            "kind": "dev",
            "methods": {},
            "title": "IRule",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "canReturnTransferRestrictionCode(uint8)": "7d045df6",
              "detectTransferRestriction(address,address,uint256)": "d4ce1415",
              "isTransferValid(address,address,uint256)": "40ecb7f2",
              "messageForTransferRestriction(uint8)": "7f4ab1dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_restrictionCode\",\"type\":\"uint8\"}],\"name\":\"canReturnTransferRestrictionCode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"detectTransferRestriction\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"isTransferValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_restrictionCode\",\"type\":\"uint8\"}],\"name\":\"messageForTransferRestriction\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"IRule interface.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IRule\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Extensions/FDT/CMTA20FDT/RuleEngineMock.sol\":\"IRule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Extensions/FDT/CMTA20FDT/RuleEngineMock.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: MPL\\\"\\n\\n/* \\n * Copyright (c) Capital Market and Technology Association, 2018-2019\\n * https://cmta.ch\\n *\\n * This Source Code Form is subject to the terms of the Mozilla Public\\n * License, v. 2.0. If a copy of the MPL was not distributed with this\\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. \\n */\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./RuleMock.sol\\\";\\n\\n\\n/**\\n * @title IRule\\n * @dev IRule interface.\\n */\\ninterface IRule {\\n  function isTransferValid(address _from, address _to, uint256 _amount) external view returns (bool isValid);\\n  function detectTransferRestriction(address _from, address _to, uint256 _amount) external view returns (uint8);\\n  function canReturnTransferRestrictionCode(uint8 _restrictionCode) external view returns (bool);\\n  function messageForTransferRestriction(uint8 _restrictionCode) external view returns (string memory);\\n}\\n\\n\\ncontract RuleEngineMock {\\n\\n    IRule[] internal _rules;\\n\\n    constructor() {\\n        _rules.push(IRule(address(new RuleMock())));\\n    }\\n\\n    function setRules(IRule[] calldata __rules) external {\\n        _rules = __rules;\\n    }\\n\\n    function ruleLength() external view returns (uint256) {\\n        return _rules.length;\\n    }\\n\\n    function rule(uint256 ruleId) external view returns (IRule) {\\n        return _rules[ruleId];\\n    }\\n\\n    function rules() external view returns(IRule[] memory) {\\n        return _rules;\\n    }\\n\\n    function detectTransferRestriction(address _from, address _to, uint256 _amount) public view returns (uint8) {\\n        for (uint256 i = 0; i < _rules.length; i++) {\\n            uint8 restriction = _rules[i].detectTransferRestriction(_from, _to, _amount);\\n            if (restriction > 0) {\\n                return restriction;\\n            }\\n        }\\n        return 0;\\n    }\\n\\n    function validateTransfer(address _from, address _to, uint256 _amount) public view returns (bool) {\\n        return detectTransferRestriction(_from, _to, _amount) == 0;\\n    }\\n\\n    function messageForTransferRestriction(uint8 _restrictionCode) public view returns (string memory) {\\n        for (uint256 i = 0; i < _rules.length; i++) {\\n            if (_rules[i].canReturnTransferRestrictionCode(_restrictionCode)) {\\n                return _rules[i].messageForTransferRestriction(_restrictionCode);\\n            }\\n        }\\n        return \\\"Unknown restriction code\\\";\\n    }\\n}\",\"keccak256\":\"0x485c739c1440f6cf467e14581292fe2765b430184a4950dd42225b4950108c26\",\"license\":\"MPL\"},\"contracts/Extensions/FDT/CMTA20FDT/RuleMock.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: MPL\\\"\\n\\n/* \\n * Copyright (c) Capital Market and Technology Association, 2018-2019\\n * https://cmta.ch\\n *\\n * This Source Code Form is subject to the terms of the Mozilla Public\\n * License, v. 2.0. If a copy of the MPL was not distributed with this\\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. \\n */\\n\\npragma solidity ^0.7.0;\\n\\n\\ncontract RuleMock {\\n\\n  uint8 private constant AMOUNT_TOO_HIGH = 10;\\n  string private constant TEXT_AMOUNT_TOO_HIGH = \\\"Amount too high\\\";\\n  string private constant TEXT_CODE_NOT_FOUND = \\\"Code not found\\\";\\n\\n  function isTransferValid(address _from, address _to, uint256 _amount) public pure returns (bool isValid) {\\n    return detectTransferRestriction(_from, _to, _amount) == 0;\\n  }\\n\\n  function detectTransferRestriction(address /* _from */, address /* _to */, uint256 _amount) public pure returns (uint8) {\\n    return _amount < 20 ? 0 : AMOUNT_TOO_HIGH;\\n  }\\n\\n  function canReturnTransferRestrictionCode(uint8 _restrictionCode) public pure returns (bool) {\\n    return _restrictionCode == AMOUNT_TOO_HIGH;\\n  }\\n\\n  function messageForTransferRestriction(uint8 _restrictionCode) external pure returns (string memory) {\\n    return _restrictionCode == AMOUNT_TOO_HIGH ? TEXT_AMOUNT_TOO_HIGH : TEXT_CODE_NOT_FOUND;\\n  }\\n}\\n\",\"keccak256\":\"0x2d121535e240dbb5515e27b7fd4025de17f4f5be0d3c754316f6c5b1a0b04e99\",\"license\":\"MPL\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "RuleEngineMock": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "detectTransferRestriction",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "_restrictionCode",
                  "type": "uint8"
                }
              ],
              "name": "messageForTransferRestriction",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "ruleId",
                  "type": "uint256"
                }
              ],
              "name": "rule",
              "outputs": [
                {
                  "internalType": "contract IRule",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ruleLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rules",
              "outputs": [
                {
                  "internalType": "contract IRule[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IRule[]",
                  "name": "__rules",
                  "type": "address[]"
                }
              ],
              "name": "setRules",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "validateTransfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600060405161001f90610073565b604051809103906000f08015801561003b573d6000803e3d6000fd5b5081546001810183556000928352602090922090910180546001600160a01b0319166001600160a01b03909216919091179055610080565b61029b806107cb83390190565b61073c8061008f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b46274161161005b578063b4627416146101e1578063c6946a12146101fb578063d4ce141514610245578063db18af6c146102915761007d565b806352f6747a146100825780637f4ab1dd146100da578063b27aef3a1461016f575b600080fd5b61008a6102ca565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100c65781810151838201526020016100ae565b505050509050019250505060405180910390f35b6100fa600480360360208110156100f057600080fd5b503560ff1661032c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013457818101518382015260200161011c565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df6004803603602081101561018557600080fd5b8101906020810181356401000000008111156101a057600080fd5b8201836020820111156101b257600080fd5b803590602001918460208302840111640100000000831117156101d457600080fd5b509092509050610561565b005b6101e9610572565b60408051918252519081900360200190f35b6102316004803603606081101561021157600080fd5b506001600160a01b03813581169160208101359091169060400135610578565b604080519115158252519081900360200190f35b61027b6004803603606081101561025b57600080fd5b506001600160a01b03813581169160208101359091169060400135610593565b6040805160ff9092168252519081900360200190f35b6102ae600480360360208110156102a757600080fd5b5035610665565b604080516001600160a01b039092168252519081900360200190f35b6060600080548060200260200160405190810160405280929190818152602001828054801561032257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610304575b5050505050905090565b606060005b600054811015610525576000818154811061034857fe5b6000918252602091829020015460408051633e822efb60e11b815260ff8716600482015290516001600160a01b0390921692637d045df692602480840193829003018186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d60208110156103c457600080fd5b50511561051d57600081815481106103d857fe5b600091825260208220015460408051637f4ab1dd60e01b815260ff8716600482015290516001600160a01b0390921692637f4ab1dd92602480840193829003018186803b15801561042857600080fd5b505afa15801561043c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561046557600080fd5b810190808051604051939291908464010000000082111561048557600080fd5b90830190602082018581111561049a57600080fd5b82516401000000008111828201881017156104b457600080fd5b82525081516020918201929091019080838360005b838110156104e15781810151838201526020016104c9565b50505050905090810190601f16801561050e5780820380516001836020036101000a031916815260200191505b5060405250505091505061055c565b600101610331565b505060408051808201909152601881527f556e6b6e6f776e207265737472696374696f6e20636f6465000000000000000060208201525b919050565b61056d6000838361068e565b505050565b60005490565b6000610585848484610593565b60ff161590505b9392505050565b6000805b60005481101561065a5760008082815481106105af57fe5b600091825260209182902001546040805163d4ce141560e01b81526001600160a01b038a811660048301528981166024830152604482018990529151919092169263d4ce14159260648082019391829003018186803b15801561061157600080fd5b505afa158015610625573d6000803e3d6000fd5b505050506040513d602081101561063b57600080fd5b5051905060ff81161561065157915061058c9050565b50600101610597565b506000949350505050565b600080828154811061067357fe5b6000918252602090912001546001600160a01b031692915050565b8280548282559060005260206000209081019282156106e1579160200282015b828111156106e15781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906106ae565b506106ed9291506106f1565b5090565b5b808211156106ed57600081556001016106f256fea2646970667358221220cbf4c332b7eb6872ca994ead9dfe76a8c228ea19c78dcfc158ebf7211a9b2eb964736f6c63430007040033608060405234801561001057600080fd5b5061027b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806340ecb7f2146100515780637d045df61461009b5780637f4ab1dd146100bb578063d4ce141514610150575b600080fd5b6100876004803603606081101561006757600080fd5b506001600160a01b0381358116916020810135909116906040013561019c565b604080519115158252519081900360200190f35b610087600480360360208110156100b157600080fd5b503560ff166101b5565b6100db600480360360208110156100d157600080fd5b503560ff166101c1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101155781810151838201526020016100fd565b50505050905090810190601f1680156101425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101866004803603606081101561016657600080fd5b506001600160a01b03813581169160208101359091169060400135610229565b6040805160ff9092168252519081900360200190f35b60006101a9848484610229565b60ff1615949350505050565b60ff8116600a14919050565b606060ff8216600a146101fa576040518060400160405280600e81526020016d10dbd919481b9bdd08199bdd5b9960921b815250610223565b6040518060400160405280600f81526020016e082dadeeadce840e8dede40d0d2ced608b1b8152505b92915050565b60006014821061023a57600a61023d565b60005b94935050505056fea26469706673582212204b1cb5ac8f8a42228c3772d7eec64c649e5e021992b358d464799dc2cfb2301f64736f6c63430007040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1F SWAP1 PUSH2 0x73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x80 JUMP JUMPDEST PUSH2 0x29B DUP1 PUSH2 0x7CB DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x73C DUP1 PUSH2 0x8F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB4627416 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB4627416 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xC6946A12 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xD4CE1415 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xDB18AF6C EQ PUSH2 0x291 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x52F6747A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x7F4AB1DD EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xB27AEF3A EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x561 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x304 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x348 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3E822EFB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x7D045DF6 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7F4AB1DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x7F4AB1DD SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4C9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x50E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP SWAP2 POP POP PUSH2 0x55C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x331 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH32 0x556E6B6E6F776E207265737472696374696F6E20636F64650000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56D PUSH1 0x0 DUP4 DUP4 PUSH2 0x68E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 DUP5 DUP5 DUP5 PUSH2 0x593 JUMP JUMPDEST PUSH1 0xFF AND ISZERO SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5AF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD4CE1415 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xD4CE1415 SWAP3 PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x625 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x651 JUMPI SWAP2 POP PUSH2 0x58C SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x597 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x673 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x6E1 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x6E1 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x6AE JUMP JUMPDEST POP PUSH2 0x6ED SWAP3 SWAP2 POP PUSH2 0x6F1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x6F2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB DELEGATECALL 0xC3 ORIGIN 0xB7 0xEB PUSH9 0x72CA994EAD9DFE76A8 0xC2 0x28 0xEA NOT 0xC7 DUP14 0xCF 0xC1 PC 0xEB 0xF7 0x21 BYTE SWAP12 0x2E 0xB9 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40ECB7F2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x7D045DF6 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x7F4AB1DD EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xD4CE1415 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x115 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x142 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1A9 DUP5 DUP5 DUP5 PUSH2 0x229 JUMP JUMPDEST PUSH1 0xFF AND ISZERO SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0xA EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP3 AND PUSH1 0xA EQ PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x10DBD919481B9BDD08199BDD5B99 PUSH1 0x92 SHL DUP2 MSTORE POP PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x82DADEEADCE840E8DEDE40D0D2CED PUSH1 0x8B SHL DUP2 MSTORE POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP3 LT PUSH2 0x23A JUMPI PUSH1 0xA PUSH2 0x23D JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B SHR 0xB5 0xAC DUP16 DUP11 TIMESTAMP 0x22 DUP13 CALLDATACOPY PUSH19 0xD7EEC64C649E5E021992B358D464799DC2CFB2 ADDRESS 0x1F PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
              "sourceMap": "888:1473:0:-:0;;;949:74;;;;;;;;;;973:6;999:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;973:43:0;;;;;;;-1:-1:-1;973:43:0;;;;;;;;;;;;-1:-1:-1;;;;;;973:43:0;-1:-1:-1;;;;;973:43:0;;;;;;;;;888:1473;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b46274161161005b578063b4627416146101e1578063c6946a12146101fb578063d4ce141514610245578063db18af6c146102915761007d565b806352f6747a146100825780637f4ab1dd146100da578063b27aef3a1461016f575b600080fd5b61008a6102ca565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100c65781810151838201526020016100ae565b505050509050019250505060405180910390f35b6100fa600480360360208110156100f057600080fd5b503560ff1661032c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013457818101518382015260200161011c565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df6004803603602081101561018557600080fd5b8101906020810181356401000000008111156101a057600080fd5b8201836020820111156101b257600080fd5b803590602001918460208302840111640100000000831117156101d457600080fd5b509092509050610561565b005b6101e9610572565b60408051918252519081900360200190f35b6102316004803603606081101561021157600080fd5b506001600160a01b03813581169160208101359091169060400135610578565b604080519115158252519081900360200190f35b61027b6004803603606081101561025b57600080fd5b506001600160a01b03813581169160208101359091169060400135610593565b6040805160ff9092168252519081900360200190f35b6102ae600480360360208110156102a757600080fd5b5035610665565b604080516001600160a01b039092168252519081900360200190f35b6060600080548060200260200160405190810160405280929190818152602001828054801561032257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610304575b5050505050905090565b606060005b600054811015610525576000818154811061034857fe5b6000918252602091829020015460408051633e822efb60e11b815260ff8716600482015290516001600160a01b0390921692637d045df692602480840193829003018186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d60208110156103c457600080fd5b50511561051d57600081815481106103d857fe5b600091825260208220015460408051637f4ab1dd60e01b815260ff8716600482015290516001600160a01b0390921692637f4ab1dd92602480840193829003018186803b15801561042857600080fd5b505afa15801561043c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561046557600080fd5b810190808051604051939291908464010000000082111561048557600080fd5b90830190602082018581111561049a57600080fd5b82516401000000008111828201881017156104b457600080fd5b82525081516020918201929091019080838360005b838110156104e15781810151838201526020016104c9565b50505050905090810190601f16801561050e5780820380516001836020036101000a031916815260200191505b5060405250505091505061055c565b600101610331565b505060408051808201909152601881527f556e6b6e6f776e207265737472696374696f6e20636f6465000000000000000060208201525b919050565b61056d6000838361068e565b505050565b60005490565b6000610585848484610593565b60ff161590505b9392505050565b6000805b60005481101561065a5760008082815481106105af57fe5b600091825260209182902001546040805163d4ce141560e01b81526001600160a01b038a811660048301528981166024830152604482018990529151919092169263d4ce14159260648082019391829003018186803b15801561061157600080fd5b505afa158015610625573d6000803e3d6000fd5b505050506040513d602081101561063b57600080fd5b5051905060ff81161561065157915061058c9050565b50600101610597565b506000949350505050565b600080828154811061067357fe5b6000918252602090912001546001600160a01b031692915050565b8280548282559060005260206000209081019282156106e1579160200282015b828111156106e15781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906106ae565b506106ed9291506106f1565b5090565b5b808211156106ed57600081556001016106f256fea2646970667358221220cbf4c332b7eb6872ca994ead9dfe76a8c228ea19c78dcfc158ebf7211a9b2eb964736f6c63430007040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB4627416 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB4627416 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xC6946A12 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xD4CE1415 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xDB18AF6C EQ PUSH2 0x291 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x52F6747A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x7F4AB1DD EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xB27AEF3A EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x561 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x304 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x348 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3E822EFB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x7D045DF6 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D8 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7F4AB1DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x7F4AB1DD SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4C9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x50E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP SWAP2 POP POP PUSH2 0x55C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x331 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH32 0x556E6B6E6F776E207265737472696374696F6E20636F64650000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56D PUSH1 0x0 DUP4 DUP4 PUSH2 0x68E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 DUP5 DUP5 DUP5 PUSH2 0x593 JUMP JUMPDEST PUSH1 0xFF AND ISZERO SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5AF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD4CE1415 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xD4CE1415 SWAP3 PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x625 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x651 JUMPI SWAP2 POP PUSH2 0x58C SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x597 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x673 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x6E1 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x6E1 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x6AE JUMP JUMPDEST POP PUSH2 0x6ED SWAP3 SWAP2 POP PUSH2 0x6F1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x6F2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB DELEGATECALL 0xC3 ORIGIN 0xB7 0xEB PUSH9 0x72CA994EAD9DFE76A8 0xC2 0x28 0xEA NOT 0xC7 DUP14 0xCF 0xC1 PC 0xEB 0xF7 0x21 BYTE SWAP12 0x2E 0xB9 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
              "sourceMap": "888:1473:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1322:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:389;;;;;;;;;;;;;;;;-1:-1:-1;1970:389:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1029:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1029:86:0;;-1:-1:-1;1029:86:0;-1:-1:-1;1029:86:0;:::i;:::-;;1121:91;;;:::i;:::-;;;;;;;;;;;;;;;;1791:173;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1791:173:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1413:372;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1413:372:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1218:98;;;;;;;;;;;;;;;;-1:-1:-1;1218:98:0;;:::i;:::-;;;;-1:-1:-1;;;;;1218:98:0;;;;;;;;;;;;;;1322:85;1361:14;1394:6;1387:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1387:13:0;;;;;;;;;;;;;;;;;;;;;;;1322:85;:::o;1970:389::-;2054:13;2084:9;2079:231;2103:6;:13;2099:17;;2079:231;;;2141:6;2148:1;2141:9;;;;;;;;;;;;;;;;;;;:60;;;-1:-1:-1;;;2141:60:0;;;;;;;;;;;-1:-1:-1;;;;;2141:9:0;;;;:42;;:60;;;;;;;;;;:9;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2141:60:0;2137:163;;;2228:6;2235:1;2228:9;;;;;;;;;;;;;;;;;:57;;;-1:-1:-1;;;2228:57:0;;;;;;;;;;;-1:-1:-1;;;;;2228:9:0;;;;:39;;:57;;;;;;;;;;:9;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2228:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2228:57:0;;;;;;;;;;-1:-1:-1;2228:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2221:64;;;;;2137:163;2118:3;;2079:231;;;-1:-1:-1;;2319:33:0;;;;;;;;;;;;;;;;;1970:389;;;;:::o;1029:86::-;1092:16;:6;1101:7;;1092:16;:::i;:::-;;1029:86;;:::o;1121:91::-;1166:7;1192:13;1121:91;:::o;1791:173::-;1883:4;1906:46;1932:5;1939:3;1944:7;1906:25;:46::i;:::-;:51;;;;-1:-1:-1;1791:173:0;;;;;;:::o;1413:372::-;1514:5;;1531:230;1555:6;:13;1551:17;;1531:230;;;1589:17;1609:6;1616:1;1609:9;;;;;;;;;;;;;;;;;;;:56;;;-1:-1:-1;;;1609:56:0;;-1:-1:-1;;;;;1609:56:0;;;;;;;;;;;;;;;;;;;;;;:9;;;;;:35;;:56;;;;;;;;;;;:9;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1609:56:0;;-1:-1:-1;1683:15:0;;;;1679:72;;1725:11;-1:-1:-1;1718:18:0;;-1:-1:-1;1718:18:0;1679:72;-1:-1:-1;1570:3:0;;1531:230;;;-1:-1:-1;1777:1:0;;1413:372;-1:-1:-1;;;;1413:372:0:o;1218:98::-;1271:5;1295:6;1302;1295:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1295:14:0;;1218:98;-1:-1:-1;;1218:98:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "370400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "detectTransferRestriction(address,address,uint256)": "infinite",
                "messageForTransferRestriction(uint8)": "infinite",
                "rule(uint256)": "2041",
                "ruleLength()": "998",
                "rules()": "infinite",
                "setRules(address[])": "infinite",
                "validateTransfer(address,address,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "detectTransferRestriction(address,address,uint256)": "d4ce1415",
              "messageForTransferRestriction(uint8)": "7f4ab1dd",
              "rule(uint256)": "db18af6c",
              "ruleLength()": "b4627416",
              "rules()": "52f6747a",
              "setRules(address[])": "b27aef3a",
              "validateTransfer(address,address,uint256)": "c6946a12"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"detectTransferRestriction\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_restrictionCode\",\"type\":\"uint8\"}],\"name\":\"messageForTransferRestriction\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ruleId\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[{\"internalType\":\"contract IRule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ruleLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rules\",\"outputs\":[{\"internalType\":\"contract IRule[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRule[]\",\"name\":\"__rules\",\"type\":\"address[]\"}],\"name\":\"setRules\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"validateTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Extensions/FDT/CMTA20FDT/RuleEngineMock.sol\":\"RuleEngineMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Extensions/FDT/CMTA20FDT/RuleEngineMock.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: MPL\\\"\\n\\n/* \\n * Copyright (c) Capital Market and Technology Association, 2018-2019\\n * https://cmta.ch\\n *\\n * This Source Code Form is subject to the terms of the Mozilla Public\\n * License, v. 2.0. If a copy of the MPL was not distributed with this\\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. \\n */\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./RuleMock.sol\\\";\\n\\n\\n/**\\n * @title IRule\\n * @dev IRule interface.\\n */\\ninterface IRule {\\n  function isTransferValid(address _from, address _to, uint256 _amount) external view returns (bool isValid);\\n  function detectTransferRestriction(address _from, address _to, uint256 _amount) external view returns (uint8);\\n  function canReturnTransferRestrictionCode(uint8 _restrictionCode) external view returns (bool);\\n  function messageForTransferRestriction(uint8 _restrictionCode) external view returns (string memory);\\n}\\n\\n\\ncontract RuleEngineMock {\\n\\n    IRule[] internal _rules;\\n\\n    constructor() {\\n        _rules.push(IRule(address(new RuleMock())));\\n    }\\n\\n    function setRules(IRule[] calldata __rules) external {\\n        _rules = __rules;\\n    }\\n\\n    function ruleLength() external view returns (uint256) {\\n        return _rules.length;\\n    }\\n\\n    function rule(uint256 ruleId) external view returns (IRule) {\\n        return _rules[ruleId];\\n    }\\n\\n    function rules() external view returns(IRule[] memory) {\\n        return _rules;\\n    }\\n\\n    function detectTransferRestriction(address _from, address _to, uint256 _amount) public view returns (uint8) {\\n        for (uint256 i = 0; i < _rules.length; i++) {\\n            uint8 restriction = _rules[i].detectTransferRestriction(_from, _to, _amount);\\n            if (restriction > 0) {\\n                return restriction;\\n            }\\n        }\\n        return 0;\\n    }\\n\\n    function validateTransfer(address _from, address _to, uint256 _amount) public view returns (bool) {\\n        return detectTransferRestriction(_from, _to, _amount) == 0;\\n    }\\n\\n    function messageForTransferRestriction(uint8 _restrictionCode) public view returns (string memory) {\\n        for (uint256 i = 0; i < _rules.length; i++) {\\n            if (_rules[i].canReturnTransferRestrictionCode(_restrictionCode)) {\\n                return _rules[i].messageForTransferRestriction(_restrictionCode);\\n            }\\n        }\\n        return \\\"Unknown restriction code\\\";\\n    }\\n}\",\"keccak256\":\"0x485c739c1440f6cf467e14581292fe2765b430184a4950dd42225b4950108c26\",\"license\":\"MPL\"},\"contracts/Extensions/FDT/CMTA20FDT/RuleMock.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: MPL\\\"\\n\\n/* \\n * Copyright (c) Capital Market and Technology Association, 2018-2019\\n * https://cmta.ch\\n *\\n * This Source Code Form is subject to the terms of the Mozilla Public\\n * License, v. 2.0. If a copy of the MPL was not distributed with this\\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. \\n */\\n\\npragma solidity ^0.7.0;\\n\\n\\ncontract RuleMock {\\n\\n  uint8 private constant AMOUNT_TOO_HIGH = 10;\\n  string private constant TEXT_AMOUNT_TOO_HIGH = \\\"Amount too high\\\";\\n  string private constant TEXT_CODE_NOT_FOUND = \\\"Code not found\\\";\\n\\n  function isTransferValid(address _from, address _to, uint256 _amount) public pure returns (bool isValid) {\\n    return detectTransferRestriction(_from, _to, _amount) == 0;\\n  }\\n\\n  function detectTransferRestriction(address /* _from */, address /* _to */, uint256 _amount) public pure returns (uint8) {\\n    return _amount < 20 ? 0 : AMOUNT_TOO_HIGH;\\n  }\\n\\n  function canReturnTransferRestrictionCode(uint8 _restrictionCode) public pure returns (bool) {\\n    return _restrictionCode == AMOUNT_TOO_HIGH;\\n  }\\n\\n  function messageForTransferRestriction(uint8 _restrictionCode) external pure returns (string memory) {\\n    return _restrictionCode == AMOUNT_TOO_HIGH ? TEXT_AMOUNT_TOO_HIGH : TEXT_CODE_NOT_FOUND;\\n  }\\n}\\n\",\"keccak256\":\"0x2d121535e240dbb5515e27b7fd4025de17f4f5be0d3c754316f6c5b1a0b04e99\",\"license\":\"MPL\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 43,
                "contract": "contracts/Extensions/FDT/CMTA20FDT/RuleEngineMock.sol:RuleEngineMock",
                "label": "_rules",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_contract(IRule)40)dyn_storage"
              }
            ],
            "types": {
              "t_array(t_contract(IRule)40)dyn_storage": {
                "base": "t_contract(IRule)40",
                "encoding": "dynamic_array",
                "label": "contract IRule[]",
                "numberOfBytes": "32"
              },
              "t_contract(IRule)40": {
                "encoding": "inplace",
                "label": "contract IRule",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/Extensions/FDT/CMTA20FDT/RuleMock.sol": {
        "RuleMock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "_restrictionCode",
                  "type": "uint8"
                }
              ],
              "name": "canReturnTransferRestrictionCode",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "detectTransferRestriction",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "isTransferValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isValid",
                  "type": "bool"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "_restrictionCode",
                  "type": "uint8"
                }
              ],
              "name": "messageForTransferRestriction",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061027b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806340ecb7f2146100515780637d045df61461009b5780637f4ab1dd146100bb578063d4ce141514610150575b600080fd5b6100876004803603606081101561006757600080fd5b506001600160a01b0381358116916020810135909116906040013561019c565b604080519115158252519081900360200190f35b610087600480360360208110156100b157600080fd5b503560ff166101b5565b6100db600480360360208110156100d157600080fd5b503560ff166101c1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101155781810151838201526020016100fd565b50505050905090810190601f1680156101425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101866004803603606081101561016657600080fd5b506001600160a01b03813581169160208101359091169060400135610229565b6040805160ff9092168252519081900360200190f35b60006101a9848484610229565b60ff1615949350505050565b60ff8116600a14919050565b606060ff8216600a146101fa576040518060400160405280600e81526020016d10dbd919481b9bdd08199bdd5b9960921b815250610223565b6040518060400160405280600f81526020016e082dadeeadce840e8dede40d0d2ced608b1b8152505b92915050565b60006014821061023a57600a61023d565b60005b94935050505056fea26469706673582212204b1cb5ac8f8a42228c3772d7eec64c649e5e021992b358d464799dc2cfb2301f64736f6c63430007040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40ECB7F2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x7D045DF6 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x7F4AB1DD EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xD4CE1415 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x115 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x142 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1A9 DUP5 DUP5 DUP5 PUSH2 0x229 JUMP JUMPDEST PUSH1 0xFF AND ISZERO SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0xA EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP3 AND PUSH1 0xA EQ PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x10DBD919481B9BDD08199BDD5B99 PUSH1 0x92 SHL DUP2 MSTORE POP PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x82DADEEADCE840E8DEDE40D0D2CED PUSH1 0x8B SHL DUP2 MSTORE POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP3 LT PUSH2 0x23A JUMPI PUSH1 0xA PUSH2 0x23D JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B SHR 0xB5 0xAC DUP16 DUP11 TIMESTAMP 0x22 DUP13 CALLDATACOPY PUSH19 0xD7EEC64C649E5E021992B358D464799DC2CFB2 ADDRESS 0x1F PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
              "sourceMap": "366:910:1:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806340ecb7f2146100515780637d045df61461009b5780637f4ab1dd146100bb578063d4ce141514610150575b600080fd5b6100876004803603606081101561006757600080fd5b506001600160a01b0381358116916020810135909116906040013561019c565b604080519115158252519081900360200190f35b610087600480360360208110156100b157600080fd5b503560ff166101b5565b6100db600480360360208110156100d157600080fd5b503560ff166101c1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101155781810151838201526020016100fd565b50505050905090810190601f1680156101425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101866004803603606081101561016657600080fd5b506001600160a01b03813581169160208101359091169060400135610229565b6040805160ff9092168252519081900360200190f35b60006101a9848484610229565b60ff1615949350505050565b60ff8116600a14919050565b606060ff8216600a146101fa576040518060400160405280600e81526020016d10dbd919481b9bdd08199bdd5b9960921b815250610223565b6040518060400160405280600f81526020016e082dadeeadce840e8dede40d0d2ced608b1b8152505b92915050565b60006014821061023a57600a61023d565b60005b94935050505056fea26469706673582212204b1cb5ac8f8a42228c3772d7eec64c649e5e021992b358d464799dc2cfb2301f64736f6c63430007040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40ECB7F2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x7D045DF6 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x7F4AB1DD EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xD4CE1415 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x115 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x142 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1A9 DUP5 DUP5 DUP5 PUSH2 0x229 JUMP JUMPDEST PUSH1 0xFF AND ISZERO SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0xA EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP3 AND PUSH1 0xA EQ PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x10DBD919481B9BDD08199BDD5B99 PUSH1 0x92 SHL DUP2 MSTORE POP PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x82DADEEADCE840E8DEDE40D0D2CED PUSH1 0x8B SHL DUP2 MSTORE POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP3 LT PUSH2 0x23A JUMPI PUSH1 0xA PUSH2 0x23D JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B SHR 0xB5 0xAC DUP16 DUP11 TIMESTAMP 0x22 DUP13 CALLDATACOPY PUSH19 0xD7EEC64C649E5E021992B358D464799DC2CFB2 ADDRESS 0x1F PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
              "sourceMap": "366:910:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:174;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;571:174:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;925:146;;;;;;;;;;;;;;;;-1:-1:-1;925:146:1;;;;:::i;1075:199::-;;;;;;;;;;;;;;;;-1:-1:-1;1075:199:1;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:172;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;749:172:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;571:174;662:12;689:46;715:5;722:3;727:7;689:25;:46::i;:::-;:51;;;;571:174;-1:-1:-1;;;;571:174:1:o;925:146::-;1031:35;;;430:2;1031:35;925:146;;;:::o;1075:199::-;1161:13;1189:35;;;430:2;1189:35;:80;;1250:19;;;;;;;;;;;;-1:-1:-1;;;1250:19:1;;;;1189:80;;;1227:20;;;;;;;;;;;;-1:-1:-1;;;1227:20:1;;;;1189:80;1182:87;1075:199;-1:-1:-1;;1075:199:1:o;749:172::-;862:5;892:2;882:7;:12;:34;;430:2;882:34;;;897:1;882:34;875:41;749:172;-1:-1:-1;;;;749:172:1:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "127000",
                "executionCost": "171",
                "totalCost": "127171"
              },
              "external": {
                "canReturnTransferRestrictionCode(uint8)": "269",
                "detectTransferRestriction(address,address,uint256)": "401",
                "isTransferValid(address,address,uint256)": "391",
                "messageForTransferRestriction(uint8)": "infinite"
              }
            },
            "methodIdentifiers": {
              "canReturnTransferRestrictionCode(uint8)": "7d045df6",
              "detectTransferRestriction(address,address,uint256)": "d4ce1415",
              "isTransferValid(address,address,uint256)": "40ecb7f2",
              "messageForTransferRestriction(uint8)": "7f4ab1dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_restrictionCode\",\"type\":\"uint8\"}],\"name\":\"canReturnTransferRestrictionCode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"detectTransferRestriction\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"isTransferValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_restrictionCode\",\"type\":\"uint8\"}],\"name\":\"messageForTransferRestriction\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Extensions/FDT/CMTA20FDT/RuleMock.sol\":\"RuleMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Extensions/FDT/CMTA20FDT/RuleMock.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: MPL\\\"\\n\\n/* \\n * Copyright (c) Capital Market and Technology Association, 2018-2019\\n * https://cmta.ch\\n *\\n * This Source Code Form is subject to the terms of the Mozilla Public\\n * License, v. 2.0. If a copy of the MPL was not distributed with this\\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. \\n */\\n\\npragma solidity ^0.7.0;\\n\\n\\ncontract RuleMock {\\n\\n  uint8 private constant AMOUNT_TOO_HIGH = 10;\\n  string private constant TEXT_AMOUNT_TOO_HIGH = \\\"Amount too high\\\";\\n  string private constant TEXT_CODE_NOT_FOUND = \\\"Code not found\\\";\\n\\n  function isTransferValid(address _from, address _to, uint256 _amount) public pure returns (bool isValid) {\\n    return detectTransferRestriction(_from, _to, _amount) == 0;\\n  }\\n\\n  function detectTransferRestriction(address /* _from */, address /* _to */, uint256 _amount) public pure returns (uint8) {\\n    return _amount < 20 ? 0 : AMOUNT_TOO_HIGH;\\n  }\\n\\n  function canReturnTransferRestrictionCode(uint8 _restrictionCode) public pure returns (bool) {\\n    return _restrictionCode == AMOUNT_TOO_HIGH;\\n  }\\n\\n  function messageForTransferRestriction(uint8 _restrictionCode) external pure returns (string memory) {\\n    return _restrictionCode == AMOUNT_TOO_HIGH ? TEXT_AMOUNT_TOO_HIGH : TEXT_CODE_NOT_FOUND;\\n  }\\n}\\n\",\"keccak256\":\"0x2d121535e240dbb5515e27b7fd4025de17f4f5be0d3c754316f6c5b1a0b04e99\",\"license\":\"MPL\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/Extensions/FDT/CMTA20FDT/RuleEngineMock.sol": {
        "ast": {
          "absolutePath": "contracts/Extensions/FDT/CMTA20FDT/RuleEngineMock.sol",
          "exportedSymbols": {
            "IRule": [
              40
            ],
            "RuleEngineMock": [
              205
            ],
            "RuleMock": [
              283
            ]
          },
          "id": 206,
          "license": "MPL",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "340:23:0"
            },
            {
              "absolutePath": "contracts/Extensions/FDT/CMTA20FDT/RuleMock.sol",
              "file": "./RuleMock.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 206,
              "sourceUnit": 284,
              "src": "365:24:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "392:48:0",
                "text": " @title IRule\n @dev IRule interface."
              },
              "fullyImplemented": false,
              "id": 40,
              "linearizedBaseContracts": [
                40
              ],
              "name": "IRule",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "40ecb7f2",
                  "id": 14,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isTransferValid",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "486:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "486:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "501:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "514:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "514:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "485:45:0"
                  },
                  "returnParameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 12,
                        "mutability": "mutable",
                        "name": "isValid",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "554:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "554:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "553:14:0"
                  },
                  "scope": 40,
                  "src": "461:107:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d4ce1415",
                  "id": 25,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "detectTransferRestriction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "606:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "606:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "621:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "621:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "634:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "605:45:0"
                  },
                  "returnParameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "674:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:0"
                  },
                  "scope": 40,
                  "src": "571:110:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7d045df6",
                  "id": 32,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canReturnTransferRestrictionCode",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "_restrictionCode",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "726:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "726:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "725:24:0"
                  },
                  "returnParameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 30,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "773:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "773:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "772:6:0"
                  },
                  "scope": 40,
                  "src": "684:95:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7f4ab1dd",
                  "id": 39,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "messageForTransferRestriction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "_restrictionCode",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "821:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:24:0"
                  },
                  "returnParameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "868:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "868:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "867:15:0"
                  },
                  "scope": 40,
                  "src": "782:101:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 206,
              "src": "441:444:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                283
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 205,
              "linearizedBaseContracts": [
                205
              ],
              "name": "RuleEngineMock",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_rules",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "919:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                    "typeString": "contract IRule[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41,
                      "name": "IRule",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 40,
                      "src": "919:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRule_$40",
                        "typeString": "contract IRule"
                      }
                    },
                    "id": 42,
                    "nodeType": "ArrayTypeName",
                    "src": "919:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage_ptr",
                      "typeString": "contract IRule[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "963:60:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 53,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "999:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RuleMock_$283_$",
                                          "typeString": "function () returns (contract RuleMock)"
                                        },
                                        "typeName": {
                                          "id": 52,
                                          "name": "RuleMock",
                                          "nodeType": "UserDefinedTypeName",
                                          "referencedDeclaration": 283,
                                          "src": "1003:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_RuleMock_$283",
                                            "typeString": "contract RuleMock"
                                          }
                                        }
                                      },
                                      "id": 54,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "999:14:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_RuleMock_$283",
                                        "typeString": "contract RuleMock"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_RuleMock_$283",
                                        "typeString": "contract RuleMock"
                                      }
                                    ],
                                    "id": 51,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "991:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 50,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "991:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 55,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "991:23:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 49,
                                "name": "IRule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "985:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRule_$40_$",
                                  "typeString": "type(contract IRule)"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "985:30:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRule_$40",
                                "typeString": "contract IRule"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IRule_$40",
                                "typeString": "contract IRule"
                              }
                            ],
                            "expression": {
                              "id": 46,
                              "name": "_rules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "973:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                                "typeString": "contract IRule[] storage ref"
                              }
                            },
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "973:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_IRule_$40_$returns$__$",
                              "typeString": "function (contract IRule)"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "973:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "973:43:0"
                      }
                    ]
                  },
                  "id": 60,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "960:2:0"
                  },
                  "returnParameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "963:0:0"
                  },
                  "scope": 205,
                  "src": "949:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 70,
                    "nodeType": "Block",
                    "src": "1082:33:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 66,
                            "name": "_rules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1092:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                              "typeString": "contract IRule[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 67,
                            "name": "__rules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "1101:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_calldata_ptr",
                              "typeString": "contract IRule[] calldata"
                            }
                          },
                          "src": "1092:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                            "typeString": "contract IRule[] storage ref"
                          }
                        },
                        "id": 69,
                        "nodeType": "ExpressionStatement",
                        "src": "1092:16:0"
                      }
                    ]
                  },
                  "functionSelector": "b27aef3a",
                  "id": 71,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRules",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "__rules",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "1047:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_calldata_ptr",
                          "typeString": "contract IRule[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 61,
                            "name": "IRule",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 40,
                            "src": "1047:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRule_$40",
                              "typeString": "contract IRule"
                            }
                          },
                          "id": 62,
                          "nodeType": "ArrayTypeName",
                          "src": "1047:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage_ptr",
                            "typeString": "contract IRule[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1046:26:0"
                  },
                  "returnParameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1082:0:0"
                  },
                  "scope": 205,
                  "src": "1029:86:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "1175:37:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 76,
                            "name": "_rules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1192:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                              "typeString": "contract IRule[] storage ref"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1192:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 75,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "1185:20:0"
                      }
                    ]
                  },
                  "functionSelector": "b4627416",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ruleLength",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1140:2:0"
                  },
                  "returnParameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "1166:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1166:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1165:9:0"
                  },
                  "scope": 205,
                  "src": "1121:91:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 91,
                    "nodeType": "Block",
                    "src": "1278:38:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87,
                            "name": "_rules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1295:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                              "typeString": "contract IRule[] storage ref"
                            }
                          },
                          "id": 89,
                          "indexExpression": {
                            "id": 88,
                            "name": "ruleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "1302:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1295:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRule_$40",
                            "typeString": "contract IRule"
                          }
                        },
                        "functionReturnParameters": 86,
                        "id": 90,
                        "nodeType": "Return",
                        "src": "1288:21:0"
                      }
                    ]
                  },
                  "functionSelector": "db18af6c",
                  "id": 92,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rule",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 82,
                        "mutability": "mutable",
                        "name": "ruleId",
                        "nodeType": "VariableDeclaration",
                        "scope": 92,
                        "src": "1232:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1232:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1231:16:0"
                  },
                  "returnParameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 92,
                        "src": "1271:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRule_$40",
                          "typeString": "contract IRule"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "IRule",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 40,
                          "src": "1271:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRule_$40",
                            "typeString": "contract IRule"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1270:7:0"
                  },
                  "scope": 205,
                  "src": "1218:98:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "1377:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 98,
                          "name": "_rules",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "1394:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                            "typeString": "contract IRule[] storage ref"
                          }
                        },
                        "functionReturnParameters": 97,
                        "id": 99,
                        "nodeType": "Return",
                        "src": "1387:13:0"
                      }
                    ]
                  },
                  "functionSelector": "52f6747a",
                  "id": 101,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rules",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 93,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1336:2:0"
                  },
                  "returnParameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "1361:14:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_memory_ptr",
                          "typeString": "contract IRule[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 94,
                            "name": "IRule",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 40,
                            "src": "1361:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRule_$40",
                              "typeString": "contract IRule"
                            }
                          },
                          "id": 95,
                          "nodeType": "ArrayTypeName",
                          "src": "1361:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage_ptr",
                            "typeString": "contract IRule[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1360:16:0"
                  },
                  "scope": 205,
                  "src": "1322:85:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "1521:264:0",
                    "statements": [
                      {
                        "body": {
                          "id": 141,
                          "nodeType": "Block",
                          "src": "1575:186:0",
                          "statements": [
                            {
                              "assignments": [
                                124
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 124,
                                  "mutability": "mutable",
                                  "name": "restriction",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 141,
                                  "src": "1589:17:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "typeName": {
                                    "id": 123,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1589:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 133,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 129,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103,
                                    "src": "1645:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 130,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 105,
                                    "src": "1652:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 131,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "1657:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 125,
                                      "name": "_rules",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 43,
                                      "src": "1609:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                                        "typeString": "contract IRule[] storage ref"
                                      }
                                    },
                                    "id": 127,
                                    "indexExpression": {
                                      "id": 126,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 113,
                                      "src": "1616:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1609:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IRule_$40",
                                      "typeString": "contract IRule"
                                    }
                                  },
                                  "id": 128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "detectTransferRestriction",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25,
                                  "src": "1609:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                                    "typeString": "function (address,address,uint256) view external returns (uint8)"
                                  }
                                },
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1609:56:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1589:76:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 134,
                                  "name": "restriction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 124,
                                  "src": "1683:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 135,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1697:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1683:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 140,
                              "nodeType": "IfStatement",
                              "src": "1679:72:0",
                              "trueBody": {
                                "id": 139,
                                "nodeType": "Block",
                                "src": "1700:51:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 137,
                                      "name": "restriction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 124,
                                      "src": "1725:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "functionReturnParameters": 111,
                                    "id": 138,
                                    "nodeType": "Return",
                                    "src": "1718:18:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 116,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "1551:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 117,
                              "name": "_rules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "1555:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                                "typeString": "contract IRule[] storage ref"
                              }
                            },
                            "id": 118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1555:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1551:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 142,
                        "initializationExpression": {
                          "assignments": [
                            113
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 113,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 142,
                              "src": "1536:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 112,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1536:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 115,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1548:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1536:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1570:3:0",
                            "subExpression": {
                              "id": 120,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1570:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 122,
                          "nodeType": "ExpressionStatement",
                          "src": "1570:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "1531:230:0"
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1777:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 111,
                        "id": 144,
                        "nodeType": "Return",
                        "src": "1770:8:0"
                      }
                    ]
                  },
                  "functionSelector": "d4ce1415",
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "detectTransferRestriction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 103,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1448:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 102,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1448:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 105,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1463:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1463:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1476:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1476:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1447:45:0"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1514:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1514:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1513:7:0"
                  },
                  "scope": 205,
                  "src": "1413:372:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "1889:75:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 158,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "1932:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 159,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 150,
                                "src": "1939:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 160,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 152,
                                "src": "1944:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 157,
                              "name": "detectTransferRestriction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "1906:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                                "typeString": "function (address,address,uint256) view returns (uint8)"
                              }
                            },
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1906:46:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1956:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1906:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 156,
                        "id": 164,
                        "nodeType": "Return",
                        "src": "1899:58:0"
                      }
                    ]
                  },
                  "functionSelector": "c6946a12",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "validateTransfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "1817:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1817:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "1832:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1832:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "1845:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1845:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1816:45:0"
                  },
                  "returnParameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "1883:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1883:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1882:6:0"
                  },
                  "scope": 205,
                  "src": "1791:173:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 203,
                    "nodeType": "Block",
                    "src": "2069:290:0",
                    "statements": [
                      {
                        "body": {
                          "id": 199,
                          "nodeType": "Block",
                          "src": "2123:187:0",
                          "statements": [
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "id": 188,
                                    "name": "_restrictionCode",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 168,
                                    "src": "2184:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 184,
                                      "name": "_rules",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 43,
                                      "src": "2141:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                                        "typeString": "contract IRule[] storage ref"
                                      }
                                    },
                                    "id": 186,
                                    "indexExpression": {
                                      "id": 185,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 174,
                                      "src": "2148:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2141:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IRule_$40",
                                      "typeString": "contract IRule"
                                    }
                                  },
                                  "id": 187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "canReturnTransferRestrictionCode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32,
                                  "src": "2141:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_bool_$",
                                    "typeString": "function (uint8) view external returns (bool)"
                                  }
                                },
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2141:60:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 198,
                              "nodeType": "IfStatement",
                              "src": "2137:163:0",
                              "trueBody": {
                                "id": 197,
                                "nodeType": "Block",
                                "src": "2203:97:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 194,
                                          "name": "_restrictionCode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 168,
                                          "src": "2268:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "expression": {
                                          "baseExpression": {
                                            "id": 190,
                                            "name": "_rules",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 43,
                                            "src": "2228:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                                              "typeString": "contract IRule[] storage ref"
                                            }
                                          },
                                          "id": 192,
                                          "indexExpression": {
                                            "id": 191,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 174,
                                            "src": "2235:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2228:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IRule_$40",
                                            "typeString": "contract IRule"
                                          }
                                        },
                                        "id": 193,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "messageForTransferRestriction",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 39,
                                        "src": "2228:39:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (uint8) view external returns (string memory)"
                                        }
                                      },
                                      "id": 195,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2228:57:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 172,
                                    "id": 196,
                                    "nodeType": "Return",
                                    "src": "2221:64:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 177,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "2099:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 178,
                              "name": "_rules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2103:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IRule_$40_$dyn_storage",
                                "typeString": "contract IRule[] storage ref"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2103:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2099:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 200,
                        "initializationExpression": {
                          "assignments": [
                            174
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 174,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 200,
                              "src": "2084:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 173,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2084:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 176,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2096:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2084:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2118:3:0",
                            "subExpression": {
                              "id": 181,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "2118:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 183,
                          "nodeType": "ExpressionStatement",
                          "src": "2118:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "2079:231:0"
                      },
                      {
                        "expression": {
                          "hexValue": "556e6b6e6f776e207265737472696374696f6e20636f6465",
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2326:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_71587a3234be244a0daf67a721f9f9cff9f2e55f74df9b378109ab4bd913726a",
                            "typeString": "literal_string \"Unknown restriction code\""
                          },
                          "value": "Unknown restriction code"
                        },
                        "functionReturnParameters": 172,
                        "id": 202,
                        "nodeType": "Return",
                        "src": "2319:33:0"
                      }
                    ]
                  },
                  "functionSelector": "7f4ab1dd",
                  "id": 204,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "messageForTransferRestriction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 168,
                        "mutability": "mutable",
                        "name": "_restrictionCode",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "2009:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:24:0"
                  },
                  "returnParameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "2054:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2054:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2053:15:0"
                  },
                  "scope": 205,
                  "src": "1970:389:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 206,
              "src": "888:1473:0"
            }
          ],
          "src": "340:2021:0"
        },
        "id": 0
      },
      "contracts/Extensions/FDT/CMTA20FDT/RuleMock.sol": {
        "ast": {
          "absolutePath": "contracts/Extensions/FDT/CMTA20FDT/RuleMock.sol",
          "exportedSymbols": {
            "RuleMock": [
              283
            ]
          },
          "id": 284,
          "license": "MPL",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 207,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "340:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 283,
              "linearizedBaseContracts": [
                283
              ],
              "name": "RuleMock",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 210,
                  "mutability": "constant",
                  "name": "AMOUNT_TOO_HIGH",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "389:43:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "430:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 213,
                  "mutability": "constant",
                  "name": "TEXT_AMOUNT_TOO_HIGH",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "436:64:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "416d6f756e7420746f6f2068696768",
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "483:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7353a6bd8628dd713e866f78b282b0b6793f273d47e76330330b9a5a159c17ef",
                      "typeString": "literal_string \"Amount too high\""
                    },
                    "value": "Amount too high"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 216,
                  "mutability": "constant",
                  "name": "TEXT_CODE_NOT_FOUND",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "504:62:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "436f6465206e6f7420666f756e64",
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "550:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1430fc0e1aec4a8614d9f6e83f7a6a1e2fce0eeec176a2f844e3ba012acf1471",
                      "typeString": "literal_string \"Code not found\""
                    },
                    "value": "Code not found"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 235,
                    "nodeType": "Block",
                    "src": "676:69:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 218,
                                "src": "715:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 229,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "722:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 230,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "727:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 227,
                              "name": "detectTransferRestriction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "689:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint256_$returns$_t_uint8_$",
                                "typeString": "function (address,address,uint256) pure returns (uint8)"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "689:46:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "739:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "689:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 226,
                        "id": 234,
                        "nodeType": "Return",
                        "src": "682:58:1"
                      }
                    ]
                  },
                  "functionSelector": "40ecb7f2",
                  "id": 236,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isTransferValid",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "596:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "596:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "611:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "611:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "624:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "595:45:1"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "isValid",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "662:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "661:14:1"
                  },
                  "scope": 283,
                  "src": "571:174:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 254,
                    "nodeType": "Block",
                    "src": "869:52:1",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 247,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "882:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "3230",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "892:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "src": "882:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 251,
                            "name": "AMOUNT_TOO_HIGH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "901:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "882:34:1",
                          "trueExpression": {
                            "hexValue": "30",
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "897:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 246,
                        "id": 253,
                        "nodeType": "Return",
                        "src": "875:41:1"
                      }
                    ]
                  },
                  "functionSelector": "d4ce1415",
                  "id": 255,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "detectTransferRestriction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "784:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "805:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "805:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "824:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "824:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "783:57:1"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 255,
                        "src": "862:5:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "862:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "861:7:1"
                  },
                  "scope": 283,
                  "src": "749:172:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 266,
                    "nodeType": "Block",
                    "src": "1018:53:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 262,
                            "name": "_restrictionCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "1031:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 263,
                            "name": "AMOUNT_TOO_HIGH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "1051:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1031:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 261,
                        "id": 265,
                        "nodeType": "Return",
                        "src": "1024:42:1"
                      }
                    ]
                  },
                  "functionSelector": "7d045df6",
                  "id": 267,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canReturnTransferRestrictionCode",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "_restrictionCode",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "967:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "967:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "966:24:1"
                  },
                  "returnParameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 260,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "1012:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1012:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1011:6:1"
                  },
                  "scope": 283,
                  "src": "925:146:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 281,
                    "nodeType": "Block",
                    "src": "1176:98:1",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 274,
                              "name": "_restrictionCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 269,
                              "src": "1189:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 275,
                              "name": "AMOUNT_TOO_HIGH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "1209:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1189:35:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 278,
                            "name": "TEXT_CODE_NOT_FOUND",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "1250:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "1189:80:1",
                          "trueExpression": {
                            "id": 277,
                            "name": "TEXT_AMOUNT_TOO_HIGH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "1227:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 273,
                        "id": 280,
                        "nodeType": "Return",
                        "src": "1182:87:1"
                      }
                    ]
                  },
                  "functionSelector": "7f4ab1dd",
                  "id": 282,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "messageForTransferRestriction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "_restrictionCode",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1114:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1113:24:1"
                  },
                  "returnParameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "1161:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1161:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1160:15:1"
                  },
                  "scope": 283,
                  "src": "1075:199:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 284,
              "src": "366:910:1"
            }
          ],
          "src": "340:937:1"
        },
        "id": 1
      }
    }
  }
}
