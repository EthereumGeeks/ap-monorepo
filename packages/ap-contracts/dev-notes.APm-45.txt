== Task APm-45:
  Rewrite deploy-contracts.js to use ethers.js / web3.js only #45
    We want to do this because truffle-contracts causes issues during deployment
      We still have to decide together whether to use ethers.js or web3.js

== things to keep in mind:

  contracts to be deployed:
    ANNEngine
    CECEngine
    CEGEngine
    CERTFEngine
    PAMEngine
    ANNEncoder
    CECEncoder
    CEGEncoder
    CERTFEncoder
    PAMEncoder
    ANNRegistry	// in dev yet
    CECRegistry	// in dev yet
    CEGRegistry	// in dev yet
    CERTFRegistry	// in dev yet
    PAMRegistry	// in dev yet
    DataRegistry
    ANNActor   (ANNRegistry, DataRegistry)
    CECActor   (CECRegistry, DataRegistry)
    CEGActor   (CEGRegistry, DataRegistry)
    CERTFActor (CERTFRegistry, DataRegistry)
    PAMActor   (PAMRegistry, DataRegistry)
    Custodian  (CECActor, CECRegistry)
    ProxySafeVanillaFDT // in dev yet
    ProxySafeSimpleRestrictedFDT // in dev yet
    FDTFactory
    ProxySafeICT  // in dev yet
    ICTFactory	  // in dev yet

  linking required:
    single-address linking
        ANNRegistry.link(instances.ANNEncoderInstance)
        CECRegistry.link(instances.CECEncoderInstance)
        CEGRegistry.link(instances.CEGEncoderInstance)
        CERTFRegistry.link(instances.CERTFEncoderInstance)
        PAMRegistry.link(instances.PAMEncoderInstance)
    linking by name
       FDTFactory.link('VanillaFDTLogic', instances.ProxySafeVanillaFDTInstance.address)
       FDTFactory.link('SimpleRestrictedFDTLogic', instances.ProxySafeSimpleRestrictedFDTInstance.address)
       ICTFactory.link('ICTLogic', instances.ProxySafeICTInstance.address)
    ? should linking by Solc be used

  `setAsDeployed` for `buidler` required:
    for all deployed contracts:
      CECEncoder.setAsDeployed(CECEncoderInstance);

  deployed contracts registration required:
    fs.writeFileSync(path.resolve(__dirname, '../', 'deployments.json'), JSON.stringify(deployments, null, 2), 'utf8');

    ? should not all contracts be registered (not just those ones the js-IFace "knows")
  	  registered (as it is now):
        ANNActor
        ANNEngine
        ANNRegistry
        CECActor
        CECEngine
        CECRegistry
        CEGActor
        CEGEngine
        CEGRegistry
        CERTFActor
        CERTFEngine
        CERTFRegistry
        Custodian
        FDTFactory
        DataRegistry
        PAMActor
        PAMEngine
        PAMRegistry
        DvPSettlement
      unregistered (as it is now):
        ANNEncoder
        CECEncoder
        CEGEncoder
        CERTFEncoder
        DvPSettlement
        ICTFactory
        PAMEncoder
        ProxySafeICT
        ProxySafeSimpleRestrictedFDT
        ProxySafeVanillaFDT
      howTo do that:
        add a flag (if the IFace should consider it or not):
    	  instance.jsIFaceEnabled = true | false

    ? is contract metadata (id) to be registered as well
      ex.: bytecode hash or "ipfs/QmV3RuN1vmHoiZUFymS6FHeEHkcZy1yZyR13sfMwEDyjbr"

    ? is on-chain registration needed

  ? is "approveActor" call (for the Asset Registries) needed:
    await instances.ANNRegistryInstance.approveActor(instances.ANNActorInstance.address);
    await instances.ANNRegistryInstance.approveActor(admin);
    await instances.ANNRegistryInstance.approveActor(defaultActor);
      // for ANNRegistry, CECRegistry, CEGRegistry, CERTFRegistry

  note the recent commit:
    Add initial deployment script via buidler
    9c7a0d2a jo-es <johannes.escherich+github@atpar.io> on 29.07.2020 at 14:57
    In 2 branches: master, origin/master
    atapr/ap-monorepo/packages/ap-contracts/scripts:
      deploy-contracts.js
      setup-ap-chain.sh
      buidler.config.js
