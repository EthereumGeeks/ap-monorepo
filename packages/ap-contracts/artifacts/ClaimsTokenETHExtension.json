{
  "contractName": "ClaimsTokenETHExtension",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalReceivedFunds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "processedFunds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimedFunds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_forAddress",
          "type": "address"
        }
      ],
      "name": "availableFunds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "receivedFunds",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "fundsDeposited",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160208062000d99833981018060405260208110156200003357600080fd5b5051604080518082018252600b81527f436c61696d73546f6b656e0000000000000000000000000000000000000000006020828101918252835180850190945260038085527f4353540000000000000000000000000000000000000000000000000000000000918501919091528251859492601292620000b692909190620001e9565b508151620000cc906004906020850190620001e9565b506005805460ff191660ff92909216919091179055506200010390508169021e19e0c9bab240000064010000000062000110810204565b505060006006556200028e565b600160a060020a03821615156200012657600080fd5b600254620001439082640100000000620007ac620001cf82021704565b600255600160a060020a038216600090815260208190526040902054620001799082640100000000620007ac620001cf82021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600082820183811015620001e257600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200022c57805160ff19168380011785556200025c565b828001600101855582156200025c579182015b828111156200025c5782518255916020019190600101906200023f565b506200026a9291506200026e565b5090565b6200028b91905b808211156200026a576000815560010162000275565b90565b610afb806200029e6000396000f3fe60806040526004361061011b576000357c0100000000000000000000000000000000000000000000000000000000900480633a4486de116100b257806395d89b411161008157806395d89b41146103bd578063a457c2d7146103d2578063a9059cbb1461040b578063ab96cc4c14610444578063dd62ed3e146104595761011b565b80633a4486de146102f1578063468ce230146103245780635d16eb5c1461035757806370a082311461038a5761011b565b806323b872dd116100ee57806323b872dd1461024257806324600fc314610285578063313ce5671461028d57806339509351146102b85761011b565b806306fdde031461012f578063095ea7b3146101b957806318160ddd14610206578063197aecb11461022d575b600034111561012d5761012d34610494565b005b34801561013b57600080fd5b506101446104e0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017e578181015183820152602001610166565b50505050905090810190601f1680156101ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c557600080fd5b506101f2600480360360408110156101dc57600080fd5b50600160a060020a038135169060200135610576565b604080519115158252519081900360200190f35b34801561021257600080fd5b5061021b61058d565b60408051918252519081900360200190f35b34801561023957600080fd5b5061021b610593565b34801561024e57600080fd5b506101f26004803603606081101561026557600080fd5b50600160a060020a03813581169160208101359091169060400135610599565b61012d6105c0565b34801561029957600080fd5b506102a26105fe565b6040805160ff9092168252519081900360200190f35b3480156102c457600080fd5b506101f2600480360360408110156102db57600080fd5b50600160a060020a038135169060200135610607565b3480156102fd57600080fd5b5061021b6004803603602081101561031457600080fd5b5035600160a060020a0316610648565b34801561033057600080fd5b5061021b6004803603602081101561034757600080fd5b5035600160a060020a031661065a565b34801561036357600080fd5b5061021b6004803603602081101561037a57600080fd5b5035600160a060020a031661066c565b34801561039657600080fd5b5061021b600480360360208110156103ad57600080fd5b5035600160a060020a031661069e565b3480156103c957600080fd5b506101446106b9565b3480156103de57600080fd5b506101f2600480360360408110156103f557600080fd5b50600160a060020a03813516906020013561071a565b34801561041757600080fd5b506101f26004803603604081101561042e57600080fd5b50600160a060020a038135169060200135610756565b34801561045057600080fd5b5061021b61077b565b34801561046557600080fd5b5061021b6004803603604081101561047c57600080fd5b50600160a060020a0381358116916020013516610781565b6006546104a7908263ffffffff6107ac16565b6006556040805182815290517f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e384269181900360200190a150565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b5050505050905090565b60006105833384846107be565b5060015b92915050565b60025490565b60065490565b60006105a48461084a565b6105ad8361084a565b6105b88484846108b0565b949350505050565b60006105ca610902565b604051909150339082156108fc029083906000818181858888f193505050501580156105fa573d6000803e3d6000fd5b5050565b60055460ff1690565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610583918590610643908663ffffffff6107ac16565b6107be565b60076020526000908152604090205481565b60086020526000908152604090205481565b600160a060020a0381166000908152600860205260408120546105879061069284610935565b9063ffffffff6107ac16565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561056c5780601f106105415761010080835404028352916020019161056c565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610583918590610643908663ffffffff61099516565b60006107613361084a565b61076a8361084a565b61077483836109aa565b9392505050565b60065481565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282018381101561077457600080fd5b600160a060020a03821615156107d357600080fd5b600160a060020a03831615156107e857600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061085582610935565b600654600160a060020a038416600090815260076020908152604080832093909355600890522054909150610890908263ffffffff6107ac16565b600160a060020a0390921660009081526008602052604090209190915550565b60006108bd8484846109b3565b600160a060020a0384166000908152600160209081526040808320338085529252909120546108f8918691610643908663ffffffff61099516565b5060019392505050565b60008061090e3361066c565b60065433600090815260076020908152604080832093909355600890529081205591505090565b600160a060020a0381166000908152600760205260408120546006548291610963919063ffffffff61099516565b905061077461097061058d565b6109898361097d8761069e565b9063ffffffff610a8016565b9063ffffffff610aab16565b6000828211156109a457600080fd5b50900390565b60006105833384845b600160a060020a03821615156109c857600080fd5b600160a060020a0383166000908152602081905260409020546109f1908263ffffffff61099516565b600160a060020a038085166000908152602081905260408082209390935590841681522054610a26908263ffffffff6107ac16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000821515610a9157506000610587565b828202828482811515610aa057fe5b041461077457600080fd5b6000808211610ab957600080fd5b60008284811515610ac657fe5b0494935050505056fea165627a7a72305820540e97477a43ef95a19322b0461190ab77257538415210d05ca572a76632320a0029",
  "deployedBytecode": "0x60806040526004361061011b576000357c0100000000000000000000000000000000000000000000000000000000900480633a4486de116100b257806395d89b411161008157806395d89b41146103bd578063a457c2d7146103d2578063a9059cbb1461040b578063ab96cc4c14610444578063dd62ed3e146104595761011b565b80633a4486de146102f1578063468ce230146103245780635d16eb5c1461035757806370a082311461038a5761011b565b806323b872dd116100ee57806323b872dd1461024257806324600fc314610285578063313ce5671461028d57806339509351146102b85761011b565b806306fdde031461012f578063095ea7b3146101b957806318160ddd14610206578063197aecb11461022d575b600034111561012d5761012d34610494565b005b34801561013b57600080fd5b506101446104e0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017e578181015183820152602001610166565b50505050905090810190601f1680156101ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c557600080fd5b506101f2600480360360408110156101dc57600080fd5b50600160a060020a038135169060200135610576565b604080519115158252519081900360200190f35b34801561021257600080fd5b5061021b61058d565b60408051918252519081900360200190f35b34801561023957600080fd5b5061021b610593565b34801561024e57600080fd5b506101f26004803603606081101561026557600080fd5b50600160a060020a03813581169160208101359091169060400135610599565b61012d6105c0565b34801561029957600080fd5b506102a26105fe565b6040805160ff9092168252519081900360200190f35b3480156102c457600080fd5b506101f2600480360360408110156102db57600080fd5b50600160a060020a038135169060200135610607565b3480156102fd57600080fd5b5061021b6004803603602081101561031457600080fd5b5035600160a060020a0316610648565b34801561033057600080fd5b5061021b6004803603602081101561034757600080fd5b5035600160a060020a031661065a565b34801561036357600080fd5b5061021b6004803603602081101561037a57600080fd5b5035600160a060020a031661066c565b34801561039657600080fd5b5061021b600480360360208110156103ad57600080fd5b5035600160a060020a031661069e565b3480156103c957600080fd5b506101446106b9565b3480156103de57600080fd5b506101f2600480360360408110156103f557600080fd5b50600160a060020a03813516906020013561071a565b34801561041757600080fd5b506101f26004803603604081101561042e57600080fd5b50600160a060020a038135169060200135610756565b34801561045057600080fd5b5061021b61077b565b34801561046557600080fd5b5061021b6004803603604081101561047c57600080fd5b50600160a060020a0381358116916020013516610781565b6006546104a7908263ffffffff6107ac16565b6006556040805182815290517f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e384269181900360200190a150565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b5050505050905090565b60006105833384846107be565b5060015b92915050565b60025490565b60065490565b60006105a48461084a565b6105ad8361084a565b6105b88484846108b0565b949350505050565b60006105ca610902565b604051909150339082156108fc029083906000818181858888f193505050501580156105fa573d6000803e3d6000fd5b5050565b60055460ff1690565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610583918590610643908663ffffffff6107ac16565b6107be565b60076020526000908152604090205481565b60086020526000908152604090205481565b600160a060020a0381166000908152600860205260408120546105879061069284610935565b9063ffffffff6107ac16565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561056c5780601f106105415761010080835404028352916020019161056c565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610583918590610643908663ffffffff61099516565b60006107613361084a565b61076a8361084a565b61077483836109aa565b9392505050565b60065481565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282018381101561077457600080fd5b600160a060020a03821615156107d357600080fd5b600160a060020a03831615156107e857600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061085582610935565b600654600160a060020a038416600090815260076020908152604080832093909355600890522054909150610890908263ffffffff6107ac16565b600160a060020a0390921660009081526008602052604090209190915550565b60006108bd8484846109b3565b600160a060020a0384166000908152600160209081526040808320338085529252909120546108f8918691610643908663ffffffff61099516565b5060019392505050565b60008061090e3361066c565b60065433600090815260076020908152604080832093909355600890529081205591505090565b600160a060020a0381166000908152600760205260408120546006548291610963919063ffffffff61099516565b905061077461097061058d565b6109898361097d8761069e565b9063ffffffff610a8016565b9063ffffffff610aab16565b6000828211156109a457600080fd5b50900390565b60006105833384845b600160a060020a03821615156109c857600080fd5b600160a060020a0383166000908152602081905260409020546109f1908263ffffffff61099516565b600160a060020a038085166000908152602081905260408082209390935590841681522054610a26908263ffffffff6107ac16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000821515610a9157506000610587565b828202828482811515610aa057fe5b041461077457600080fd5b6000808211610ab957600080fd5b60008284811515610ac657fe5b0494935050505056fea165627a7a72305820540e97477a43ef95a19322b0461190ab77257538415210d05ca572a76632320a0029",
  "sourceMap": "84:545:22:-;;;150:65;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:65:22;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;150:65:22;405:163:33;;;;;;;;;;;;150:65:22;405:163:33;;;;;;;;;;;;;;;;;;;;;;;;;;493:12;;150:65:22;;405:163:33;787:2:20;;493:12:33;;405:163;;;493:12;:::i;:::-;-1:-1:-1;515:16:33;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:33;:20;;-1:-1:-1;;541:20:33;;;;;;;;;;;;-1:-1:-1;796:42:20;;-1:-1:-1;802:6:20;810:27;796:5;;;;:42;:::i;:::-;-1:-1:-1;;859:1:20;843:13;:17;84:545:22;;5814:263:32;-1:-1:-1;;;;;5888:21:32;;;;5880:30;;;;;;5936:12;;:23;;5953:5;5936:16;;;;;;:23;:::i;:::-;5921:12;:38;-1:-1:-1;;;;;5990:18:32;;:9;:18;;;;;;;;;;;:29;;6013:5;5990:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;5969:18:32;;:9;:18;;;;;;;;;;;:50;;;;6034:36;;;;;;;5969:18;;:9;;6034:36;;;;;;;;;;5814:263;;:::o;1439:145:30:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;;1576:1;1439:145;-1:-1:-1;;;1439:145:30:o;84:545:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;84:545:22;;;-1:-1:-1;84:545:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "84:545:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:1;574:9;:13;570:54;;;594:25;609:9;594:14;:25::i;:::-;84:545;628:81:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:81:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2721:145:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2721:145:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2721:145:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;916:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:89:32;;;:::i;:::-;;;;;;;;;;;;;;;;2012:101:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2012:101:20;;;:::i;1680:189::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1680:189:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1680:189:20;;;;;;;;;;;;;;;;;:::i;273:149:22:-;;;:::i;930:81:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:81:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4067:200:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4067:200:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4067:200:32;;;;;;;;:::i;511:50:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;511:50:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;511:50:20;-1:-1:-1;;;;;511:50:20;;:::i;615:48::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;615:48:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;615:48:20;-1:-1:-1;;;;;615:48:20;;:::i;2338:163::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2338:163:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2338:163:20;-1:-1:-1;;;;;2338:163:20;;:::i;1217:104:32:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:104:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1217:104:32;-1:-1:-1;;;;;1217:104:32;;:::i;771:85:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:85:33;;;:::i;4786:210:32:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4786:210:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4786:210:32;;;;;;;;:::i;1131:164:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1131:164:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1131:164:20;;;;;;;;:::i;394:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:28:20;;;:::i;1652:129:32:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1652:129:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1652:129:32;;;;;;;;;;:::i;2680::20:-;2753:13;;:25;;2771:6;2753:25;:17;:25;:::i;:::-;2737:13;:41;2790:15;;;;;;;;;;;;;;;;;2680:129;:::o;628:81:33:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2721:145:32:-;2786:4;2802:36;2811:10;2823:7;2832:5;2802:8;:36::i;:::-;-1:-1:-1;2855:4:32;2721:145;;;;;:::o;916:89::-;986:12;;916:89;:::o;2012:101:20:-;2096:13;;2012:101;:::o;1680:189::-;1766:4;1777:18;1789:5;1777:11;:18::i;:::-;1799:16;1811:3;1799:11;:16::i;:::-;1827:38;1846:5;1853:3;1858:6;1827:18;:38::i;:::-;1820:45;1680:189;-1:-1:-1;;;;1680:189:20:o;273:149:22:-;327:25;355:18;:16;:18::i;:::-;380:38;;327:46;;-1:-1:-1;380:10:22;;:38;;;;;327:46;;380:38;;;;327:46;380:10;:38;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;380:38:22;273:149;:::o;930:81:33:-;995:9;;;;930:81;:::o;4067:200:32:-;4172:10;4147:4;4193:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4193:29:32;;;;;;;;;;4147:4;;4163:76;;4184:7;;4193:45;;4227:10;4193:45;:33;:45;:::i;:::-;4163:8;:76::i;511:50:20:-;;;;;;;;;;;;;:::o;615:48::-;;;;;;;;;;;;;:::o;2338:163::-;-1:-1:-1;;;;;2471:25:20;;2410:7;2471:25;;;:12;:25;;;;;;2432:65;;:34;2484:11;2432:21;:34::i;:::-;:38;:65;:38;:65;:::i;1217:104:32:-;-1:-1:-1;;;;;1298:16:32;1272:7;1298:16;;;;;;;;;;;;1217:104::o;771:85:33:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;4786:210:32;4896:10;4871:4;4917:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4917:29:32;;;;;;;;;;4871:4;;4887:81;;4908:7;;4917:50;;4951:15;4917:50;:33;:50;:::i;1131:164:20:-;1198:4;1209:23;1221:10;1209:11;:23::i;:::-;1236:16;1248:3;1236:11;:16::i;:::-;1264:27;1279:3;1284:6;1264:14;:27::i;:::-;1257:34;1131:164;-1:-1:-1;;;1131:164:20:o;394:28::-;;;;:::o;1652:129:32:-;-1:-1:-1;;;;;1750:15:32;;;1724:7;1750:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1652:129::o;1439:145:30:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;6831:248:32;-1:-1:-1;;;;;6923:21:32;;;;6915:30;;;;;;-1:-1:-1;;;;;6963:19:32;;;;6955:28;;;;;;-1:-1:-1;;;;;6994:15:32;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7041:31;;;;;;;;;;;;;;;;;6831:248;;;:::o;3294:247:20:-;3349:24;3376:34;3398:11;3376:21;:34::i;:::-;3445:13;;-1:-1:-1;;;;;3415:27:20;;;;;;:14;:27;;;;;;;;:43;;;;3490:12;:25;;;;3349:61;;-1:-1:-1;3490:47:20;;3349:61;3490:47;:29;:47;:::i;:::-;-1:-1:-1;;;;;3462:25:20;;;;;;;:12;:25;;;;;:75;;;;-1:-1:-1;3294:247:20:o;3329:224:32:-;3408:4;3424:26;3434:4;3440:2;3444:5;3424:9;:26::i;:::-;-1:-1:-1;;;;;3487:14:32;;;;;;:8;:14;;;;;;;;3475:10;3487:26;;;;;;;;;3460:65;;3469:4;;3487:37;;3518:5;3487:37;:30;:37;:::i;3460:65::-;-1:-1:-1;3542:4:32;3329:224;;;;;:::o;3765:232:20:-;3817:7;3831:25;3859:26;3874:10;3859:14;:26::i;:::-;3919:13;;3905:10;3890:26;;;;:14;:26;;;;;;;;:42;;;;3936:12;:24;;;;;:28;3831:54;-1:-1:-1;;3765:232:20;:::o;2945:249::-;-1:-1:-1;;;;;3088:27:20;;3028:7;3088:27;;;:14;:27;;;;;;3070:13;;3028:7;;3070:46;;:13;:46;:17;:46;:::i;:::-;3043:73;;3127:63;3176:13;:11;:13::i;:::-;3127:44;3154:16;3127:22;3137:11;3127:9;:22::i;:::-;:26;:44;:26;:44;:::i;:::-;:48;:63;:48;:63;:::i;1211:145:30:-;1269:7;1296:6;;;;1288:15;;;;;;-1:-1:-1;1325:5:30;;;1211:145::o;1948:137:32:-;2009:4;2025:32;2035:10;2047:2;2051:5;5215:256;-1:-1:-1;;;;;5302:16:32;;;;5294:25;;;;;;-1:-1:-1;;;;;5348:15:32;;:9;:15;;;;;;;;;;;:26;;5368:5;5348:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5330:15:32;;;:9;:15;;;;;;;;;;;:44;;;;5400:13;;;;;;;:24;;5418:5;5400:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5384:13:32;;;:9;:13;;;;;;;;;;;;:40;;;;5439:25;;;;;;;5384:13;;5439:25;;;;;;;;;;;;;5215:256;;;:::o;231:421:30:-;289:7;529:6;;525:45;;;-1:-1:-1;558:1:30;551:8;;525:45;592:5;;;596:1;592;:5;615;;;;;;;;:10;607:19;;;;;782:296;840:7;933:5;;;925:14;;;;;;949:9;965:1;961;:5;;;;;;;;;782:296;-1:-1:-1;;;;782:296:30:o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"./IClaimsToken.sol\";\nimport \"./ClaimsToken.sol\";\n\n\ncontract ClaimsTokenETHExtension is IClaimsToken, ClaimsToken {\n\n\tconstructor (address _owner) \n\t\tpublic \n\t\tClaimsToken(_owner)\n\t{}\n\n\t/**\n\t * @dev Withdraws available funds for user.\n\t */\n\tfunction withdrawFunds() \n\t\texternal \n\t\tpayable \n\t{\n\t\tuint256 withdrawableFunds = _prepareWithdraw();\n\t\t\n\t\tmsg.sender.transfer(withdrawableFunds);\n\t}\n\n\t/**\n\t * @dev Calls _registerFunds(), \n\t * whereby total received funds (cumulative) gets updated.\n\t */\n\tfunction () \n\t\texternal \n\t\tpayable \n\t{\n\t\tif (msg.value > 0) {\n\t\t\t_registerFunds(msg.value);\n\t\t}\n\t}\n}",
  "sourcePath": "/Users/johannes/Documents/dev/actus-protocol/ap-monorepo/packages/ap-contracts/contracts/APTokenization/ClaimsTokenETHExtension.sol",
  "ast": {
    "absolutePath": "/Users/johannes/Documents/dev/actus-protocol/ap-monorepo/packages/ap-contracts/contracts/APTokenization/ClaimsTokenETHExtension.sol",
    "exportedSymbols": {
      "ClaimsTokenETHExtension": [
        5816
      ]
    },
    "id": 5817,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5768,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/Users/johannes/Documents/dev/actus-protocol/ap-monorepo/packages/ap-contracts/contracts/APTokenization/IClaimsToken.sol",
        "file": "./IClaimsToken.sol",
        "id": 5769,
        "nodeType": "ImportDirective",
        "scope": 5817,
        "sourceUnit": 6112,
        "src": "25:28:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/johannes/Documents/dev/actus-protocol/ap-monorepo/packages/ap-contracts/contracts/APTokenization/ClaimsToken.sol",
        "file": "./ClaimsToken.sol",
        "id": 5770,
        "nodeType": "ImportDirective",
        "scope": 5817,
        "sourceUnit": 5671,
        "src": "54:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5771,
              "name": "IClaimsToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6111,
              "src": "120:12:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IClaimsToken_$6111",
                "typeString": "contract IClaimsToken"
              }
            },
            "id": 5772,
            "nodeType": "InheritanceSpecifier",
            "src": "120:12:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5773,
              "name": "ClaimsToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5670,
              "src": "134:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimsToken_$5670",
                "typeString": "contract ClaimsToken"
              }
            },
            "id": 5774,
            "nodeType": "InheritanceSpecifier",
            "src": "134:11:22"
          }
        ],
        "contractDependencies": [
          5670,
          6111,
          8635,
          8693,
          8762
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5816,
        "linearizedBaseContracts": [
          5816,
          5670,
          8693,
          8635,
          8762,
          6111
        ],
        "name": "ClaimsTokenETHExtension",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5782,
              "nodeType": "Block",
              "src": "213:2:22",
              "statements": []
            },
            "documentation": null,
            "id": 5783,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5779,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5776,
                    "src": "204:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5780,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5778,
                  "name": "ClaimsToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5670,
                  "src": "192:11:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ClaimsToken_$5670_$",
                    "typeString": "type(contract ClaimsToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "192:19:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5776,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 5783,
                  "src": "163:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "162:16:22"
            },
            "returnParameters": {
              "id": 5781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:22"
            },
            "scope": 5816,
            "src": "150:65:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5799,
              "nodeType": "Block",
              "src": "323:99:22",
              "statements": [
                {
                  "assignments": [
                    5787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5787,
                      "name": "withdrawableFunds",
                      "nodeType": "VariableDeclaration",
                      "scope": 5799,
                      "src": "327:25:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5786,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "327:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5790,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5788,
                      "name": "_prepareWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5669,
                      "src": "355:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 5789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "355:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "327:46:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5796,
                        "name": "withdrawableFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5787,
                        "src": "400:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5791,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8777,
                          "src": "380:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "380:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 5795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "380:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "380:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5798,
                  "nodeType": "ExpressionStatement",
                  "src": "380:38:22"
                }
              ]
            },
            "documentation": "@dev Withdraws available funds for user.",
            "id": 5800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:2:22"
            },
            "returnParameters": {
              "id": 5785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:22"
            },
            "scope": 5816,
            "src": "273:149:22",
            "stateMutability": "payable",
            "superFunction": 6098,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5814,
              "nodeType": "Block",
              "src": "566:61:22",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5803,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8777,
                        "src": "574:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "574:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "586:1:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "574:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5813,
                  "nodeType": "IfStatement",
                  "src": "570:54:22",
                  "trueBody": {
                    "id": 5812,
                    "nodeType": "Block",
                    "src": "589:35:22",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5808,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8777,
                                "src": "609:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "609:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5807,
                            "name": "_registerFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5583,
                            "src": "594:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 5810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "594:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5811,
                        "nodeType": "ExpressionStatement",
                        "src": "594:25:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Calls _registerFunds(), \nwhereby total received funds (cumulative) gets updated.",
            "id": 5815,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:2:22"
            },
            "returnParameters": {
              "id": 5802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:22"
            },
            "scope": 5816,
            "src": "529:98:22",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5817,
        "src": "84:545:22"
      }
    ],
    "src": "0:629:22"
  },
  "legacyAST": {
    "absolutePath": "/Users/johannes/Documents/dev/actus-protocol/ap-monorepo/packages/ap-contracts/contracts/APTokenization/ClaimsTokenETHExtension.sol",
    "exportedSymbols": {
      "ClaimsTokenETHExtension": [
        5816
      ]
    },
    "id": 5817,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5768,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/Users/johannes/Documents/dev/actus-protocol/ap-monorepo/packages/ap-contracts/contracts/APTokenization/IClaimsToken.sol",
        "file": "./IClaimsToken.sol",
        "id": 5769,
        "nodeType": "ImportDirective",
        "scope": 5817,
        "sourceUnit": 6112,
        "src": "25:28:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/johannes/Documents/dev/actus-protocol/ap-monorepo/packages/ap-contracts/contracts/APTokenization/ClaimsToken.sol",
        "file": "./ClaimsToken.sol",
        "id": 5770,
        "nodeType": "ImportDirective",
        "scope": 5817,
        "sourceUnit": 5671,
        "src": "54:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5771,
              "name": "IClaimsToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6111,
              "src": "120:12:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IClaimsToken_$6111",
                "typeString": "contract IClaimsToken"
              }
            },
            "id": 5772,
            "nodeType": "InheritanceSpecifier",
            "src": "120:12:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5773,
              "name": "ClaimsToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5670,
              "src": "134:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ClaimsToken_$5670",
                "typeString": "contract ClaimsToken"
              }
            },
            "id": 5774,
            "nodeType": "InheritanceSpecifier",
            "src": "134:11:22"
          }
        ],
        "contractDependencies": [
          5670,
          6111,
          8635,
          8693,
          8762
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5816,
        "linearizedBaseContracts": [
          5816,
          5670,
          8693,
          8635,
          8762,
          6111
        ],
        "name": "ClaimsTokenETHExtension",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5782,
              "nodeType": "Block",
              "src": "213:2:22",
              "statements": []
            },
            "documentation": null,
            "id": 5783,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5779,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5776,
                    "src": "204:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5780,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5778,
                  "name": "ClaimsToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5670,
                  "src": "192:11:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ClaimsToken_$5670_$",
                    "typeString": "type(contract ClaimsToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "192:19:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5776,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 5783,
                  "src": "163:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "162:16:22"
            },
            "returnParameters": {
              "id": 5781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:22"
            },
            "scope": 5816,
            "src": "150:65:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5799,
              "nodeType": "Block",
              "src": "323:99:22",
              "statements": [
                {
                  "assignments": [
                    5787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5787,
                      "name": "withdrawableFunds",
                      "nodeType": "VariableDeclaration",
                      "scope": 5799,
                      "src": "327:25:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5786,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "327:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5790,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5788,
                      "name": "_prepareWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5669,
                      "src": "355:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 5789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "355:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "327:46:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5796,
                        "name": "withdrawableFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5787,
                        "src": "400:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5791,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8777,
                          "src": "380:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "380:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 5795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "380:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "380:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5798,
                  "nodeType": "ExpressionStatement",
                  "src": "380:38:22"
                }
              ]
            },
            "documentation": "@dev Withdraws available funds for user.",
            "id": 5800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:2:22"
            },
            "returnParameters": {
              "id": 5785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:22"
            },
            "scope": 5816,
            "src": "273:149:22",
            "stateMutability": "payable",
            "superFunction": 6098,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5814,
              "nodeType": "Block",
              "src": "566:61:22",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5803,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8777,
                        "src": "574:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "574:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "586:1:22",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "574:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5813,
                  "nodeType": "IfStatement",
                  "src": "570:54:22",
                  "trueBody": {
                    "id": 5812,
                    "nodeType": "Block",
                    "src": "589:35:22",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5808,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8777,
                                "src": "609:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "609:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5807,
                            "name": "_registerFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5583,
                            "src": "594:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 5810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "594:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5811,
                        "nodeType": "ExpressionStatement",
                        "src": "594:25:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Calls _registerFunds(), \nwhereby total received funds (cumulative) gets updated.",
            "id": 5815,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:2:22"
            },
            "returnParameters": {
              "id": 5802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:22"
            },
            "scope": 5816,
            "src": "529:98:22",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5817,
        "src": "84:545:22"
      }
    ],
    "src": "0:629:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-03-28T18:25:01.745Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "availableFunds(address)": {
        "details": "Returns the amount of funds a given address is able to withdraw currently.",
        "params": {
          "_forAddress": "Address of ClaimsToken holder"
        },
        "return": "A uint256 representing the available funds for a given account"
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalReceivedFunds()": {
        "details": "Get cumulative funds received by ClaimsToken.",
        "return": "A uint256 representing the total funds received by ClaimsToken"
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address. Claims funds for both parties, whereby the amount of tokens withdrawn  is inherited by the new token owner.",
        "params": {
          "_to": "The address to transfer to",
          "_value": "The amount to be transferred"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Claims funds for both parties, whereby the amount of tokens withdrawn is inherited by the new token owner.",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      },
      "withdrawFunds()": {
        "details": "Withdraws available funds for user."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}